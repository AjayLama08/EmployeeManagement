// <auto-generated />
using System;
using EmployeeManagementApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagementApp.Data.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    partial class EmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("EmployeeManagementApp.Data.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AttendanceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances");

                    b.HasData(
                        new
                        {
                            AttendanceId = 1,
                            AttendanceDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1
                        },
                        new
                        {
                            AttendanceId = 2,
                            AttendanceDate = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1
                        },
                        new
                        {
                            AttendanceId = 3,
                            AttendanceDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2
                        },
                        new
                        {
                            AttendanceId = 4,
                            AttendanceDate = new DateTime(2024, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2
                        },
                        new
                        {
                            AttendanceId = 5,
                            AttendanceDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3
                        },
                        new
                        {
                            AttendanceId = 6,
                            AttendanceDate = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3
                        },
                        new
                        {
                            AttendanceId = 7,
                            AttendanceDate = new DateTime(2024, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4
                        },
                        new
                        {
                            AttendanceId = 8,
                            AttendanceDate = new DateTime(2024, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4
                        });
                });

            modelBuilder.Entity("EmployeeManagementApp.Data.Department", b =>
                {
                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DepartmentCode");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentCode = "HR",
                            DepartmentName = "Human Resources"
                        },
                        new
                        {
                            DepartmentCode = "IT",
                            DepartmentName = "Information Technology"
                        },
                        new
                        {
                            DepartmentCode = "FN",
                            DepartmentName = "Finance"
                        },
                        new
                        {
                            DepartmentCode = "MK",
                            DepartmentName = "Marketing"
                        });
                });

            modelBuilder.Entity("EmployeeManagementApp.Data.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentCode");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DepartmentCode = "HR",
                            EmployeeName = "John Doe",
                            Position = "Manager"
                        },
                        new
                        {
                            EmployeeId = 2,
                            DepartmentCode = "IT",
                            EmployeeName = "Jane Smith",
                            Position = "Software Developer"
                        },
                        new
                        {
                            EmployeeId = 3,
                            DepartmentCode = "FN",
                            EmployeeName = "Samuel Lee",
                            Position = "Accountant"
                        },
                        new
                        {
                            EmployeeId = 4,
                            DepartmentCode = "MK",
                            EmployeeName = "Emma Brown",
                            Position = "Marketing Specialist"
                        });
                });

            modelBuilder.Entity("EmployeeManagementApp.Data.Attendance", b =>
                {
                    b.HasOne("EmployeeManagementApp.Data.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeManagementApp.Data.Employee", b =>
                {
                    b.HasOne("EmployeeManagementApp.Data.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeManagementApp.Data.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EmployeeManagementApp.Data.Employee", b =>
                {
                    b.Navigation("Attendances");
                });
#pragma warning restore 612, 618
        }
    }
}
